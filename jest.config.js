/** @type {import('@jest/types').Config.ProjectConfig} */
const config = {
  // automock: false,
  // bail: 0,
  // browser: false,
  // cacheDirectory: '/tmp/jest_rs',
  // clearMocks: true,
  // collectCoverage: false,
  // collectCoverageFrom: null,
  // coverageDirectory: 'coverage',
  // coveragePathIgnorePatterns: ['/node_modules/'],
  // coverageReporters: ['clover', 'json', 'lcov', 'text'],
  // coverageThreshold: null,
  // dependencyExtractor: null,
  // errorOnDeprecated: false,
  // forceCoverageMatch: [],
  // globalSetup: null,
  // globalTeardown: null,
  // globals: {},
  // maxWorkers: '50%',
  // moduleDirectories: ['node_modules'],
  moduleFileExtensions: ['js', 'json', 'jsx', 'ts', 'tsx', 'node'],
  moduleNameMapper: {
    '@src/(.*)': '<rootDir>/src/$1',
    '\\.(css|less|scss|sss|styl)$': '<rootDir>/node_modules/jest-css-modules',
  },
  // modulePathIgnorePatterns: [],
  // notify: false,
  // notifyMode: 'failure-change',
  // preset: null,
  // projects: null,
  // reporters: undefined,
  // resetMocks: false,
  // resetModules: false,
  // resolver: null,
  // restoreMocks: false,
  // rootDir: null,
  roots: ['<rootDir>/src'],
  // runner: 'jest-runner',
  // setupFiles: [],
  // setupFilesAfterEnv: [],
  // snapshotSerializers: [],
  // testEnvironment: 'jest-environment-jsdom',
  // testEnvironmentOptions: {},
  // testLocationInResults: false,
  // testMatch: [
  //   '**/__tests__/**/*.[jt]s?(x)',
  //   '**/?(*.)+(spec|test).[tj]s?(x)'
  // ],
  testPathIgnorePatterns: ['/node_modules/', 'stories.tsx'],
  // testRegex: [],
  // testResultsProcessor: null,
  // testRunner: 'jasmine2',
  // testURL: 'http://localhost',
  // timers: 'real',
  // transform: null,
  transform: {
    '\\.tsx?$': 'ts-jest',
  },
  // transformIgnorePatterns: ['/node_modules/'],
  // unmockedModulePathPatterns: undefined,
  // verbose: null,
  // watchPathIgnorePatterns: [],
  // watchman: true,
};

module.exports = config;
